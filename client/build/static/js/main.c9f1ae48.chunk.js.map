{"version":3,"sources":["actions/index.js","actions/types.js","components/Payments.js","components/Header.js","components/Landing.js","components/App.js","reducers/index.js","reducers/authReducer.js","index.js"],"names":["fetchUser","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","res","wrap","_context","prev","next","axios","get","sent","type","payload","data","stop","this","_x","apply","arguments","handleToken","token","_ref2","_callee2","_context2","post","_x2","Payments","_this","react_default","createElement","main_default","name","description","amount","props","stripeKey","process","className","Component","connect","actions","Header","auth","href","key","components_Payments","style","margin","credits","console","log","Link","to","renderContent","Landing","textAlign","Dashboard","SurveyNew","App","BrowserRouter","components_Header","Route","exact","path","component","combineReducers","state","length","undefined","action","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.c9f1ae48.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { FETCH_USER } from './types';\r\n\r\n\r\nexport const fetchUser = () => async dispatch => {\r\n    const res = await axios.get('/api/current_user')\r\n    \r\n    dispatch({ type: FETCH_USER, payload: res.data });\r\n};\r\n\r\nexport const handleToken = (token) => async dispatch => {\r\n    const res = await axios.post('/api/stripe', token); //after user buys credit, reload\r\n\r\n    dispatch({ type: FETCH_USER, payload: res.data });//update credits by fetching user\r\n};\r\n\r\n\r\n\r\n","export const FETCH_USER = 'fetch_user';","import React, { Component } from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\nclass Payments extends Component {\r\n  render() {\r\n \r\n    return(\r\n      <StripeCheckout \r\n        name=\"Emaily\"\r\n        description=\"$5 for 5 email credits\"\r\n        amount={500} //500cents = 5usd\r\n        token={token => this.props.handleToken(token)} //expects callback function from stripe\r\n        stripeKey={process.env.REACT_APP_STRIPE_KEY}\r\n      >\r\n        <button className=\"btn\">\r\n          Add Credits\r\n        </button>\r\n      </StripeCheckout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, actions)(Payments);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport  { Link } from 'react-router-dom';\r\nimport Payments from './Payments';\r\nclass Header extends Component {\r\n  renderContent() {\r\n    switch(this.props.auth) {\r\n      case null:\r\n        return ;\r\n      case false:\r\n        return  <li><a href=\"/auth/google\">Login With Google</a></li>;\r\n      default:\r\n        return [\r\n        <li key=\"1\"><Payments /></li>,\r\n        <li key=\"3\" style={{ margin: '0 10px'}}> \r\n          Credits: {this.props.auth.credits}\r\n        </li>,\r\n        <li key=\"2\"><a href=\"/api/logout\">Logout</a></li>\r\n      ];\r\n    \r\n    }\r\n  }\r\n\r\n  render(){\r\n    console.log(this.props);\r\n    return (\r\n      <nav>\r\n        <div className=\"nav-wrapper\">\r\n          <Link \r\n            to={this.props.auth ? '/surveys' : '/' } \r\n            className=\"left brand-logo\"\r\n          >\r\n            Emaily\r\n          </Link> \r\n          <ul className=\"right\">\r\n            {this.renderContent()}\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\nfunction mapStateToProps({ auth }) {\r\n  return{ auth };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);","import React from 'react';\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <div style ={{ textAlign: 'center'}}>\r\n      <h1>\r\n        Emaily!\r\n      </h1>\r\n      Collect feedback from your users\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n//import action creators\r\nimport * as actions from '../actions';\r\nimport Header from './Header';\r\nimport Landing from './Landing'\r\nconst Dashboard = () => <h2>Dashboard</h2>;\r\nconst SurveyNew = () => <h2>SurveyNew</h2>;\r\n\r\n\r\nclass App extends Component {\r\n  //equal to componentWillMount, find out which user logged in\r\n  componentDidMount() {\r\n    this.props.fetchUser();\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"container\">\r\n        <BrowserRouter>\r\n          <div>\r\n            <Header />\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route exact path=\"/surveys\" component={Dashboard} />\r\n            <Route path=\"/surveys/new\" component={SurveyNew} />\r\n          </div>\r\n        </BrowserRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(null, actions)(App); //first: mapStateToProps(null) / second: actioncreator","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\n\r\nexport default combineReducers({\r\n  auth: authReducer\r\n});","import { FETCH_USER } from '../actions/types';\r\n\r\nexport default function(state = null, action){\r\n  //determine whether user logged in\r\n  switch (action.type){\r\n    case FETCH_USER:\r\n      console.log(action.payload);\r\n      return action.payload || false; //action.payload or false\r\n      //so that empty string is not returned\r\n    default:\r\n      return state; \r\n  }\r\n}","import 'materialize-css/dist/css/materialize.min.css'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}><App /></Provider>,\r\n   document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}